# Кonstantin Filippov 02.01.2021
# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {"название": "компьютер", "цена": 20000, "количество": 5, "eд": "шт."}),
# (2, {"название": "принтер", "цена": 6000, "количество": 2, "eд": "шт."}),
# (3, {"название": "сканер", "цена": 2000, "количество": 7, "eд": "шт."})
# ]
# Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# "название": ["компьютер", "принтер", "сканер"],
# "цена": [20000, 6000, 2000],
# "количество": [5, 2, 7],
# "ед": ["шт."]
# }

def f_get_value_of(descr, type):
    while True:
        print(f'Введите {descr}: ', end='')
        x = input()
        if type == 'int+':
            try:
                x = int(x)
                if x < 1:
                    print('Введите число 1 или большее.')
                    continue
                return x
            except ValueError as err:
                print(f"Значение \"{x}\" не удалось привести к целочисленному типу.\nОшибка: ", err)
        else:
            return x


def f_input():
    # parameters = [ "название" , "цена", "количество", "eд" ]
    mylist = []
    print("\n-------------------------------------------------------------------------------------")
    rows = f_get_value_of('количество строк которое хотите ввести', 'int+')
    for el in range(rows):
        mylist.append((f_get_value_of(f'номер[{el + 1}/{rows}]', 'int+'),
                       {
                           "название": f_get_value_of(f'название[{el + 1}/{rows}]:', ''),
                           "цена": f_get_value_of(f'цена[{el + 1}/{rows}]:', 'int+'),
                           "количество": f_get_value_of(f'количество[{el + 1}/{rows}]:', 'int+'),
                           "eд": f_get_value_of(f'eдиницы измерения[{el + 1}/{rows}]:', ''),
                       }
                       ))

    print("\nРезультат ввода:")
    for el in range(len(mylist)):
        print(mylist[el])
    print("\n-------------------------------------------------------------------------------------")
    return mylist




def f_converter(iv_list):
    if len(iv_list) > 0:
        rv_dict = {el: list([]) for el in iv_list[0][1]}
        for el in range(len(iv_list)):
            tmp_dict = iv_list[el][1]
            for key, value in tmp_dict.items():
                rv_dict.get(key).append(value)
        return rv_dict


def demo():
    demo_list =  [
        (1, {"название": "компьютер", "цена": 20000, "количество": 5, "eд": "шт."}),
        (2, {"название": "принтер", "цена": 6000, "количество": 2, "eд": "шт."}),
        (3, {"название": "сканер", "цена": 2000, "количество": 7, "eд": "шт."})
    ]

    print('Исходный список')
    for el in demo_list:
        print(el)

    demo_dict = f_converter(demo_list)

    print('\nЦелевой словарь:')
    # for k, v in demo_dict:
    #     print(f" {k} \t:\t {v}")
    print(demo_dict)



def d2u6():
     txt = "1 - ввод, 2 - демо, 0 - выход"
     lv_in = '2'
     while True:
         lv_in = f_get_value_of(txt, '')
         if lv_in == '1':
            print("\n-------------------------------------------------------------------------------------")
            print("Результат конвертации:")
            print("\n-------------------------------------------------------------------------------------")
            print(f_converter(f_input()))
         elif lv_in == '2':
             print("\n-------------------------------------------------------------------------------------")
             print("Демо (конвертация):")
             print("\n-------------------------------------------------------------------------------------")
             demo()
         elif lv_in == '0':
             break
         else:
             continue

d2u6()

